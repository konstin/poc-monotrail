name: Release

on:
  push:
    tags: [ 'v*' ]

jobs:
  build-wheels:
    name: Build Wheels
    strategy:
      fail-fast: false
      matrix:
        os: [ "ubuntu-latest", "windows-latest", "macos-latest" ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Cache cargo build
        uses: Swatinem/rust-cache@v1
        with:
          key: build-wheels-${{ runner.os }}
          cache-on-failure: true
      - name: Build wheel
        uses: messense/maturin-action@v1
        with:
          command: build
          args: --release --strip --universal2
          manylinux: auto
      - name: Upload wheel
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: target/wheels

  build-sdist:
    name: Release sdist
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v3
      - name: Build sdist
        uses: messense/maturin-action@v1
        with:
          command: sdist
      - name: Upload sdist
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: target/wheels

  upload:
    name: Release Upload
    runs-on: ubuntu-latest
    needs: [ build-wheels, build-sdist ]
    steps:
      - name: Download wheels
        uses: actions/download-artifact@v3
        with:
          name: wheels
      - name: Publish to PyPi
        uses: messense/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        with:
          command: upload
          args: --skip-existing *

  build-binaries:
    name: Build Binaries
    strategy:
      fail-fast: false
      matrix:
        platform: [
          { os: "ubuntu-latest", bin: "monotrail", release: "monotrail-x86_64-unknown-linux-gnu.tar.gz" },
          { os: "windows-latest", bin: "monotrail", release: "monotrail-x86_64-pc-windows-msvc.zip" },
          { os: "macos-latest", bin: "monotrail", release: "monotrail-x86_64-apple-darwin.tar.gz" },
        ]
    runs-on: ${{ matrix.platform.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Cache cargo build
        uses: Swatinem/rust-cache@v1
        with:
          key: build-binaries-${{ runner.os }}
          cache-on-failure: true
      - name: cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Archive binary (windows)
        if: matrix.platform.os == 'windows-latest'
        run: |
          cd target/release
          7z a ../../${{ matrix.platform.release }} ${{ matrix.platform.bin }}.exe
          cd -
      - name: Archive binary (linux and macOS)
        if: matrix.platform.os != 'windows-latest'
        run: |
          cd target/release
          ls
          tar czvf ../../${{ matrix.platform.release }} ${{ matrix.platform.bin }}
          cd -
      - name: Upload Binary
        uses: actions/upload-artifact@v3
        with:
          name: binaries
          path: ${{ matrix.platform.release }}

  release-binaries-github:
    name: Publish to GitHub releases
    runs-on: ubuntu-latest
    needs: [ build-binaries ]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: binaries
          path: binaries
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            binaries/*.tar.gz
            binaries/*.zip
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}